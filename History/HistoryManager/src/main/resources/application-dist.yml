server:
  port: 1040

bootstrap:
  servers: ${KAFKA_BOOTSTRAP}:${KAFKA_PORT}         #edited

atcontext:
  url: http://gateway:9090/ngsi-ld/contextes/

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/

spring:
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP}:${KAFKA_PORT}         #edited
  cloud:
    config:
      enabled: true
      uri: http://config-server:8888
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS}:${KAFKA_PORT}      #edited
  datasource:
    url: jdbc:postgresql://${POSTGRES_SERVICE}:${POSTGRES_PORT}/ngb?ApplicationName=ngb_querymanager
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP
      maxLifetime: 2000000
      connectionTimeout: 30000
reader:
  enabled: true
  datasource:
    url: "jdbc:postgresql://${POSTGRES_SERVICE}:${POSTGRES_PORT}/ngb?ApplicationName=ngb_storagemanager_reader"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Reader
      maxLifetime: 2000000
      connectionTimeout: 30000

writer:
  enabled: true
  datasource:
    url: "jdbc:postgresql://${POSTGRES_SERVICE}:${POSTGRES_PORT}/ngb?ApplicationName=ngb_storagemanager_writer"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Writer
      maxLifetime: 2000000
      connectionTimeout: 30000
defaultLimit: 50
maxLimit: 500

# Keycloak Server Information
keycloak:
  auth-server-url: ${KEYCLOAK_SERVER_URL}
  credentials:
    secret: ${CLIENT_SECRET}
  realm: ${REALM}
  bearer-only: 'true'
  use-resource-role-mappings: 'true'
  ssl-required: ${SSL_REQUIRED}
  resource: ${CLIENT_ID}
